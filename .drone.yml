package-config-dev: &package-config-dev
  when:
    event: push
    branch: master
  image: synthein/love-build
  environment:
    - LOVE_VERSION=0.10.2
    - UNSTABLE_BUILD_NUMBER=0-${DRONE_BUILD_NUMBER}

package-config-release: &package-config-release
  when:
    event: tag
  image: synthein/love-build
  environment:
    - LOVE_VERSION=0.10.2

pipeline:
  test:
    when:
      event: push
    image: synthein/love-build
    pull: true
    commands:
      - make check
      - make test

  package-love-dev:
    <<: *package-config-dev
    commands:
      - make love synthein_version=$${UNSTABLE_BUILD_NUMBER}

  package-linux-appimage-dev:
    <<: *package-config-dev
    commands:
      - make appimage synthein_version=$${UNSTABLE_BUILD_NUMBER} love_version=$${LOVE_VERSION}

  # package-linux-snap-dev:
  #   <<: *package-config-dev
  #   commands:
  #     - make snap synthein_version=$${UNSTABLE_BUILD_NUMBER} love_version=$${LOVE_VERSION}

  package-mac-dev:
    <<: *package-config-dev
    commands:
      - make mac synthein_version=$${UNSTABLE_BUILD_NUMBER} love_version=$${LOVE_VERSION}

  package-windows-dev:
    <<: *package-config-dev
    commands:
      - make windows synthein_version=$${UNSTABLE_BUILD_NUMBER} love_version=$${LOVE_VERSION}

  upload-builds-dev:
    when:
      event: push
      branch: master
    image: plugins/s3
    bucket: synthein-unstable-builds
    secrets: [ aws_access_key_id, aws_secret_access_key ]
    region: us-west-2
    source: build/synthein-0-${DRONE_BUILD_NUMBER}*
    strip_prefix: build/
    target: /

  package-love-release:
    <<: *package-config-release
    commands:
      - make love synthein_version=${DRONE_TAG}

  package-linux-appimage-release:
    <<: *package-config-release
    commands:
      - make appimage synthein_version=${DRONE_TAG} love_version=$${LOVE_VERSION}

  # package-linux-snap-release:
  #   <<: *package-config-release
  #   commands:
  #     - make snap synthein_version=${DRONE_TAG} love_version=$${LOVE_VERSION}

  package-mac-release:
    <<: *package-config-release
    commands:
      - make mac synthein_version=${DRONE_TAG} love_version=$${LOVE_VERSION}

  package-windows-release:
    <<: *package-config-release
    commands:
      - make windows synthein_version=${DRONE_TAG} love_version=$${LOVE_VERSION}

  upload-builds-release:
    when:
      event: tag
    image: plugins/github-release
    secrets: [ github_token ]
    files: build/synthein-${DRONE_TAG}*

  notify-push:
    when:
      event: push
      branch: master
      status: [failure, success, error]
    image: appleboy/drone-telegram
    pull: true
    secrets: [ telegram_token ]
    to: -1001143861626
    format: html
    message: >
      <a href="{{ build.link }}">Build {{ build.status }}</a>

      <a href="https://github.com/synthein/synthein">{{ repo.owner }}/{{ repo.name }}</a>
      in branch <b>{{ commit.branch }}</b> by <b>{{ commit.author }}</b>.

      {{ commit.message }}

  notify-tag:
    when:
      event: tag
      status: [failure, success, error]
    image: appleboy/drone-telegram
    pull: true
    secrets: [ telegram_token ]
    to: -1001143861626
    format: html
    message: >
      <b>
        Synthein version
        <a href="https://github.com/synthein/synthein/releases/tag/{{build.tag}}">{{build.tag}}</a>
        release
      </b>

      <a href="{{build.link}}">Build {{build.status}}</a>
